(setq-default skk-kutouten-type 'en)
(setq skk-egg-like-newline t)
(setq my-skk-rom-kana-rule-list-base
      (append
        '(
          ("h." nil ".")
          ("h," nil ",")
          ("h!" nil "!")
          ("h?" nil "?")
          ("h;" nil ";")
          ("h:" nil ":")
          ("h-" nil "-")
          ("h~" nil "~")
          ("h/" nil "/")
          ("h@" nil "@")
          ("h=" nil "=")
          ("h(" nil "(")
          ("h)" nil ")")
          ("h[" nil "[")
          ("h]" nil "]")
          ("h<" nil "<")
          ("h>" nil ">")
          ("h\\" nil "\\")
          ("h$" nil "$")
          ("ht" nil "\t")
          ("z " nil "　")
          ("z." nil "。")
          ("z," nil "、")
          ("z!" nil "！")
          ("z?" nil "？")
          ("z;" nil "；")
          ("z:" nil "：")
          ("z-" nil "ー")
          ("z~" nil "〜")
          ("z/" nil "・")
          ("z@" nil "＠")
          ("z=" nil "＝")
          ("z(" nil "（")
          ("z)" nil "）")
          ("z[" nil "「")
          ("z]" nil "」")
          ("z<" nil "＜")
          ("z>" nil "＞")
          ("zz-" nil "…")
          ("zz[" nil "『")
          ("zz]" nil "』")
          ("ca" nil "∧")
          ("co" nil "∨")
          ("cn" nil "¬")
          ("ci" nil "⊃")
          ("cf" nil "⊥")
          ("cy" nil "⇒")
          ("cY" nil "→")
          ("cd" nil "≡")
          ("cA" nil "∀")
          ("cE" nil "∃")
          ("ce" nil "∈")
          ("cu" nil "Π")
          ("cl" nil "λ")
          ("c<" nil "《")
          ("c>" nil "》")
          ("cp" nil "├")
        )
        skk-rom-kana-rule-list))
(setq my-skk-rom-kana-rule-list-en
      (append
        '(
          ("." nil ".")
          ("," nil ",")
          ("!" nil "!")
          ("?" nil "?")
          (";" nil ";")
          (":" nil ":")
        ; ("-" nil "-")
          ("~" nil "~")
        ; ("/" nil "/")
          ("@" nil "@")
          ("=" nil "=")
          ("(" nil "(")
          (")" nil ")")
          ("[" nil "[")
          ("]" nil "]")
          ("<" nil "<")
          (">" nil ">")
        ; ("\\" nil "\\")
        ; ("$" nil "$")
        )
        my-skk-rom-kana-rule-list-base))
(setq my-skk-rom-kana-rule-list-ja
      (append
        '(
          ("." nil "。")
          ("," nil "、")
          ("!" nil "！")
          ("?" nil "？")
          ("-" nil "ー")
          ("@" nil "＠")
          ("[" nil "「")
          ("]" nil "」")
        )
        my-skk-rom-kana-rule-list-base))
(setq my-skk-rom-kana-rule-list-jssst
      (append
        '(
          ("." nil "．")
          ("," nil "，")
          ("!" nil "!")
          ("?" nil "?")
          ("-" nil "ー")
          ("@" nil "@")
          ("[" nil "[")
          ("]" nil "]")
        )
        my-skk-rom-kana-rule-list-base))
(defun skk-reconstruct-rule-tree ()
       (kill-local-variable 'skk-rule-tree)
       (setq skk-rule-tree (skk-compile-rule-list
                                skk-rom-kana-base-rule-list
                                skk-rom-kana-rule-list)))
(defun skk-use-en-signs ()
       (interactive)
       (setq skk-rom-kana-rule-list my-skk-rom-kana-rule-list-en)
       (skk-reconstruct-rule-tree))
(defun skk-use-ja-signs ()
       (interactive)
       (setq skk-rom-kana-rule-list my-skk-rom-kana-rule-list-ja)
       (skk-reconstruct-rule-tree))
(defun skk-use-jssst-signs ()
       (interactive)
       (setq skk-rom-kana-rule-list my-skk-rom-kana-rule-list-jssst)
       (skk-reconstruct-rule-tree))
(skk-use-en-signs)
